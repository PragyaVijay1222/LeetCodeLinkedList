class Solution {
public:
    ListNode* reverse(ListNode* head){
        ListNode* prev = nullptr;
        ListNode* current = head;
        ListNode* next = nullptr;

        while(current != nullptr){
            next = current->next;
            current->next = prev;
            prev = current;
            current = next;
        }
        return prev;
    }
    ListNode* doubleIt(ListNode* head) {
        head = reverse(head);
        ListNode* current = head;
        int carry = 0;

        while (current != nullptr){
            int sum = current-> val * 2 + carry;
            current-> val = sum %10;
            carry = sum /10;

            if(current->next == nullptr && carry>0){
                current ->next = new ListNode(carry);
                break;
            }
            current = current->next;
        }
        head = reverse(head);
        return head;
    }
};
